---
title: Search all of our sale listings
---

#search_app

- content_for(:javascript) do
  %script{ :type => "text/javascript", :src => "https://cdnjs.cloudflare.com/ajax/libs/augment.js/1.0.0/augment.min.js" }
  %script{ :type => "text/javascript", :src => "https://cdnjs.cloudflare.com/ajax/libs/lunr.js/0.7.1/lunr.min.js" }
  %script{ :type => "text/javascript", :src => "https://cdnjs.cloudflare.com/ajax/libs/react/15.2.1/react.min.js" }
  %script{ :type => "text/javascript", :src => "https://cdnjs.cloudflare.com/ajax/libs/react/15.2.1/react-dom.min.js" }
  %script{ :type => "text/javascript", :src => "https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js" }

  :javascript
    window.indexData = #{Listing.search_data};

  :plain
    <script type="text/babel">
      var SearchResultLink = React.createClass({
        render: function() {
          var href = "/sale/" + this.props.id + "?text=" + encodeURI(this.props.text);
          return  <a className="collection-item" href={href}>{this.props.sale.starting} in {this.props.sale.city}: {this.props.sale.title}</a>;
        }
      });

      var NoResults = React.createClass({
        render: function() {
          return  <div className="collection-item">No results for: {this.props.text}</div>;
        }
      });

      var SearchResults = React.createClass({
        render: function() {

          var results;
          if(this.props.text == undefined) {
            results = "";
          } else if(this.props.results.length > 0) {
            var text = this.props.text;
            results = this.props.results.map(function(result) {
              var sale = window.indexData[result.ref];
              return <SearchResultLink id={result.ref} sale={sale} text={text}/>;
            });
          } else if(this.props.text != "") {
            results = <NoResults text={this.props.text} />
          }

          return  <div className="collection with-header">
                    {results}
                  </div>
        }
      });
      var SearchApp = React.createClass({
        getInitialState: function() {
          return {results: []}
        },

        getDefaultProps: function() {
          var index = lunr(function() {
            this.field("title");
            this.field("content");
            this.field("city");
            this.ref("id");
          });
          $.each(Object.keys(window.indexData), function(idx, key) {
            index.add(window.indexData[key]);
          });
          return { index: index };
        },

        onChange: function(e) {
          e.preventDefault();
          var results = this.props.index.search(e.target.value);
          this.setState({results: results, text: e.target.value});
        },

        render: function() {
          return (
            <div>
              <form onSubmit={this.handleSubmit}>
                <div className="input-field">
                  <label>Start typing to search</label>
                  <input type="text" onChange={this.onChange} value={this.state.text} />
                </div>
              </form>
              <SearchResults results={this.state.results} text={this.state.text} />
            </div>
          )
        },
      });

      ReactDOM.render(<SearchApp />, document.getElementById('search_app'));
    </script>
