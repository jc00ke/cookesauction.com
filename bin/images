#!/usr/bin/env ruby

require "thor"
require "mini_magick"

class Images < Thor

  F = FileUtils::Verbose

  no_tasks do
    def check_dir(src)
      unless File.exists?(src)
        say "#{src} doesn't exist", :red
        exit
      end
    end
  end

  desc "process", "process the images in SOURCE & save them to DESTINATION. [start]"
  method_option :src,   :type => :string,   :required => true
  method_option :dest,  :type => :string,   :required => true
  method_option :start,  :type => :numeric
  method_option :skip_rename, :type => :boolean
  def process
    src = options[:src]
    dest = options[:dest]
    start = options[:start] || 0
    check_dir(src)
    Dir.chdir src
    F.mkdir dest unless File.exists?(dest)

    entries = Dir.glob("*.{jpg,JPG}").sort
    entries.each_with_index do |photo, idx|
      image = MiniMagick::Image.open(photo)
      image.auto_orient
      name = options[:skip_rename] ? File.basename(photo.downcase, ".jpg") : idx + start

      # write out original
      image.write "#{dest}/#{name}_original.jpg"

      image.quality 75

      # full size image
      image.scale "800x800"
      image.write "#{dest}/#{name}.jpg"

      # small image
      image.size    "125x125"
      image.thumbnail    "125x125^"
      image.gravity "center"
      image.extent "125x125"
      image.write "#{dest}/#{name}_small.jpg"
      print "."
    end
    say "processed #{entries.size} photos"
  end
end

Images.start
